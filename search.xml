<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Visual Model Based Question Bank Retrieval</title>
      <link href="/2024/08/31/Visual_Model_Based_Question_Bank_Retrieval/"/>
      <url>/2024/08/31/Visual_Model_Based_Question_Bank_Retrieval/</url>
      
        <content type="html"><![CDATA[<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>使用Apple提供的机器学习框架识别图片中的文字，然后使用 Sentence Embeddings 方法计算出和存储在JSON文件中的每一个题目的相似度，最后选择相似度最高的题目，输出题目相应的答案。</p><h2 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h2><h3 id="所需的框架"><a href="#所需的框架" class="headerlink" title="所需的框架"></a>所需的框架</h3><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"><span class="keyword">import</span> UIKit</span><br><span class="line"><span class="keyword">import</span> Vision</span><br><span class="line"><span class="keyword">import</span> NaturalLanguage</span><br></pre></td></tr></table></figure><ul><li><strong>SwiftUI/UIKit</strong> 构建软件的交互页面</li><li><strong>Vision</strong> 识别图片中的文字</li><li><strong>NaturalLanguage</strong> 实现 Sentence Embeddings 获取句子之间的相似度。</li></ul><h3 id="ImagePicker获取图像"><a href="#ImagePicker获取图像" class="headerlink" title="ImagePicker获取图像"></a>ImagePicker获取图像</h3><p>这里使用UIKit和SwiftUI的混编，因为Apple目前只支持通过UIKit调用相机。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">ImagePicker</span>: <span class="title class_">UIViewControllerRepresentable</span> {</span><br><span class="line">    <span class="meta">@Binding</span> <span class="keyword">var</span> image: <span class="type">UIImage</span>?</span><br><span class="line">    <span class="meta">@Environment</span>(\.presentationMode) <span class="keyword">var</span> presentationMode</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Coordinator</span>: <span class="title class_">NSObject</span>, <span class="title class_">UINavigationControllerDelegate</span>, <span class="title class_">UIImagePickerControllerDelegate</span> {</span><br><span class="line">        <span class="keyword">let</span> parent: <span class="type">ImagePicker</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">init</span>(<span class="params">parent</span>: <span class="type">ImagePicker</span>) {</span><br><span class="line">            <span class="keyword">self</span>.parent <span class="operator">=</span> parent</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="keyword">func</span> <span class="title function_">imagePickerController</span>(<span class="keyword">_</span> <span class="params">picker</span>: <span class="type">UIImagePickerController</span>, <span class="params">didFinishPickingMediaWithInfo</span> <span class="params">info</span>: [<span class="type">UIImagePickerController</span>.<span class="params">InfoKey</span> : <span class="keyword">Any</span>]) {</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">let</span> uiImage <span class="operator">=</span> info[.originalImage] <span class="keyword">as?</span> <span class="type">UIImage</span> {</span><br><span class="line">                parent.image <span class="operator">=</span> uiImage</span><br><span class="line">            }</span><br><span class="line">            parent.presentationMode.wrappedValue.dismiss()</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">makeCoordinator</span>() -&gt; <span class="type">Coordinator</span> {</span><br><span class="line">        <span class="type">Coordinator</span>(parent: <span class="keyword">self</span>)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">makeUIViewController</span>(<span class="params">context</span>: <span class="type">Context</span>) -&gt; <span class="type">UIImagePickerController</span> {</span><br><span class="line">        <span class="keyword">let</span> picker <span class="operator">=</span> <span class="type">UIImagePickerController</span>()</span><br><span class="line">        picker.delegate <span class="operator">=</span> context.coordinator</span><br><span class="line">        picker.sourceType <span class="operator">=</span> .camera</span><br><span class="line">        <span class="keyword">return</span> picker</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">func</span> <span class="title function_">updateUIViewController</span>(<span class="keyword">_</span> <span class="params">uiViewController</span>: <span class="type">UIImagePickerController</span>, <span class="params">context</span>: <span class="type">Context</span>) {}</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>这段代码定义了一个 ImagePicker 结构体，它实现了UIViewControllerRepresentable 协议，用于在 SwiftUI 中集成 UIKit 的 UIImagePickerController，以便我使用相机拍取题目。   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Environment(\.presentationMode)</span> <span class="keyword">var</span> presentationMode </span><br></pre></td></tr></table></figure><p>控制试图的展示与关闭  </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Binding</span> <span class="keyword">var</span> image: <span class="type">UIImage</span>? </span><br></pre></td></tr></table></figure><p>与ContentView绑定的变量，传递拍照获取的图像数据</p><h3 id="文字识别"><a href="#文字识别" class="headerlink" title="文字识别"></a>文字识别</h3><p>在 ContentView中添加变量：</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@State</span> <span class="keyword">private</span> <span class="keyword">var</span> <span class="attr">recognizedText</span>: <span class="title class_">String</span> = <span class="string">"No text recognized"</span></span><br></pre></td></tr></table></figure><p>这里，Apple为开发者提供了便捷的机器学习框架。我们只需要请求摄像头权限，然后就可以直接调用：</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">recognizeText</span>() {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">guard</span> <span class="keyword">let</span> image <span class="operator">=</span> image<span class="operator">?</span>.cgImage <span class="keyword">else</span> { <span class="keyword">return</span> }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> requestHandler <span class="operator">=</span> <span class="type">VNImageRequestHandler</span>(cgImage: image, options: [:])</span><br><span class="line">    <span class="keyword">let</span> request <span class="operator">=</span> <span class="type">VNRecognizeTextRequest</span> { (request, error) <span class="keyword">in</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">let</span> observations <span class="operator">=</span> request.results <span class="keyword">as?</span> [<span class="type">VNRecognizedTextObservation</span>] {</span><br><span class="line">            <span class="keyword">let</span> recognizedStrings <span class="operator">=</span> observations.compactMap { <span class="variable">$0</span>.topCandidates(<span class="number">1</span>).first<span class="operator">?</span>.string }</span><br><span class="line">            <span class="type">DispatchQueue</span>.main.async {</span><br><span class="line">                recognizedText <span class="operator">=</span> recognizedStrings.joined(separator: <span class="string">"<span class="subst">\n</span>"</span>)</span><br><span class="line">                recognizedText <span class="operator">=</span> recognizedText.trimmingCharacters(in: <span class="type">CharacterSet</span>.newlines)</span><br><span class="line">            }</span><br><span class="line">        } <span class="keyword">else</span> <span class="keyword">if</span> <span class="keyword">let</span> error <span class="operator">=</span> error {</span><br><span class="line">            <span class="type">DispatchQueue</span>.main.async {</span><br><span class="line">                recognizedText <span class="operator">=</span> <span class="string">"Error: <span class="subst">\(error.localizedDescription)</span>"</span></span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span> {</span><br><span class="line">        <span class="keyword">try</span> requestHandler.perform([request])</span><br><span class="line">    } <span class="keyword">catch</span> {</span><br><span class="line">        recognizedText <span class="operator">=</span> <span class="string">"Error: <span class="subst">\(error.localizedDescription)</span>"</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>其内部结构主要利用了深度学习中的卷积神经网络。</p><h3 id="计算文本相似度"><a href="#计算文本相似度" class="headerlink" title="计算文本相似度"></a>计算文本相似度</h3><p>这里，我们使用 Sentence Embedding 算法将句子映射到高维向量空间。在这个向量空间中，语义相似的文本会被映射到彼此靠近的位置。 </p><p>Apple 使用的是余弦相似度计算文本之间的相似度。余弦相似度不是直接计算“距离”，而是计算两个向量之间的夹角的余弦值。</p><p><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.17ex;" xmlns="http://www.w3.org/2000/svg" width="32.252ex" height="4.704ex" role="img" focusable="false" viewBox="0 -1120 14255.2 2079"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="43" d="M56 342Q56 428 89 500T174 615T283 681T391 705Q394 705 400 705T408 704Q499 704 569 636L582 624L612 663Q639 700 643 704Q644 704 647 704T653 705H657Q660 705 666 699V419L660 413H626Q620 419 619 430Q610 512 571 572T476 651Q457 658 426 658Q322 658 252 588Q173 509 173 342Q173 221 211 151Q232 111 263 84T328 45T384 29T428 24Q517 24 571 93T626 244Q626 251 632 257H660L666 251V236Q661 133 590 56T403 -21Q262 -21 159 83T56 342Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(722,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(1222,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(1616,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1894,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(2450,0)"></path><path data-c="20" d="" transform="translate(2894,0)"></path><path data-c="53" d="M55 507Q55 590 112 647T243 704H257Q342 704 405 641L426 672Q431 679 436 687T446 700L449 704Q450 704 453 704T459 705H463Q466 705 472 699V462L466 456H448Q437 456 435 459T430 479Q413 605 329 646Q292 662 254 662Q201 662 168 626T135 542Q135 508 152 480T200 435Q210 431 286 412T370 389Q427 367 463 314T500 191Q500 110 448 45T301 -21Q245 -21 201 -4T140 27L122 41Q118 36 107 21T87 -7T78 -21Q76 -22 68 -22H64Q61 -22 55 -16V101Q55 220 56 222Q58 227 76 227H89Q95 221 95 214Q95 182 105 151T139 90T205 42T305 24Q352 24 386 62T420 155Q420 198 398 233T340 281Q284 295 266 300Q261 301 239 306T206 314T174 325T141 343T112 367T85 402Q55 451 55 507Z" transform="translate(3144,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(3700,0)"></path><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(3978,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(4811,0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(5089,0)"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(5367,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(5867,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(6259,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(6537,0)"></path><path data-c="79" d="M69 -66Q91 -66 104 -80T118 -116Q118 -134 109 -145T91 -160Q84 -163 97 -166Q104 -168 111 -168Q131 -168 148 -159T175 -138T197 -106T213 -75T225 -43L242 0L170 183Q150 233 125 297Q101 358 96 368T80 381Q79 382 78 382Q66 385 34 385H19V431H26L46 430Q65 430 88 429T122 428Q129 428 142 428T171 429T200 430T224 430L233 431H241V385H232Q183 385 185 366L286 112Q286 113 332 227L376 341V350Q376 365 366 373T348 383T334 385H331V431H337H344Q351 431 361 431T382 430T405 429T422 429Q477 429 503 431H508V385H497Q441 380 422 345Q420 343 378 235T289 9T227 -131Q180 -204 113 -204Q69 -204 44 -177T19 -116Q19 -89 35 -78T69 -66Z" transform="translate(6926,0)"></path></g><g data-mml-node="mo" transform="translate(7731.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(8787.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(9509.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(10510,0)"><g data-mml-node="mrow" transform="translate(776,676)"><g data-mml-node="TeXAtom" data-mjx-texclass="ORD"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D42F" d="M401 444Q413 441 495 441Q568 441 574 444H580V382H510L409 156Q348 18 339 6Q331 -4 320 -4Q318 -4 313 -4T303 -3H288Q273 -3 264 12T221 102Q206 135 197 156L96 382H26V444H34Q49 441 145 441Q252 441 270 444H279V382H231L284 264Q335 149 338 149Q338 150 389 264T442 381Q442 382 418 382H394V444H401Z"></path></g><g data-mml-node="mn" transform="translate(640,-150) scale(0.707)"><path data-c="1D7CF" d="M481 0L294 3Q136 3 109 0H96V62H227V304Q227 546 225 546Q169 529 97 529H80V591H97Q231 591 308 647L319 655H333Q355 655 359 644Q361 640 361 351V62H494V0H481Z"></path></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1096.6,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D42F" d="M401 444Q413 441 495 441Q568 441 574 444H580V382H510L409 156Q348 18 339 6Q331 -4 320 -4Q318 -4 313 -4T303 -3H288Q273 -3 264 12T221 102Q206 135 197 156L96 382H26V444H34Q49 441 145 441Q252 441 270 444H279V382H231L284 264Q335 149 338 149Q338 150 389 264T442 381Q442 382 418 382H394V444H401Z"></path></g><g data-mml-node="mn" transform="translate(640,-150) scale(0.707)"><path data-c="1D7D0" d="M175 580Q175 578 185 572T205 551T215 510Q215 467 191 449T137 430Q107 430 83 448T58 511Q58 558 91 592T168 640T259 654Q328 654 383 637Q451 610 484 563T517 459Q517 401 482 360T368 262Q340 243 265 184L210 140H274Q416 140 429 145Q439 148 447 186T455 237H517V233Q516 230 501 119Q489 9 486 4V0H57V25Q57 51 58 54Q60 57 109 106T215 214T288 291Q364 377 364 458Q364 515 328 553T231 592Q214 592 201 589T181 584T175 580Z"></path></g></g></g></g><g data-mml-node="mrow" transform="translate(220,-709.5)"><g data-mml-node="mo" transform="translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(278,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D42F" d="M401 444Q413 441 495 441Q568 441 574 444H580V382H510L409 156Q348 18 339 6Q331 -4 320 -4Q318 -4 313 -4T303 -3H288Q273 -3 264 12T221 102Q206 135 197 156L96 382H26V444H34Q49 441 145 441Q252 441 270 444H279V382H231L284 264Q335 149 338 149Q338 150 389 264T442 381Q442 382 418 382H394V444H401Z"></path></g><g data-mml-node="mn" transform="translate(640,-150) scale(0.707)"><path data-c="1D7CF" d="M481 0L294 3Q136 3 109 0H96V62H227V304Q227 546 225 546Q169 529 97 529H80V591H97Q231 591 308 647L319 655H333Q355 655 359 644Q361 640 361 351V62H494V0H481Z"></path></g></g></g><g data-mml-node="mo" transform="translate(1374.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="mo" transform="translate(1652.6,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1930.6,0)"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D42F" d="M401 444Q413 441 495 441Q568 441 574 444H580V382H510L409 156Q348 18 339 6Q331 -4 320 -4Q318 -4 313 -4T303 -3H288Q273 -3 264 12T221 102Q206 135 197 156L96 382H26V444H34Q49 441 145 441Q252 441 270 444H279V382H231L284 264Q335 149 338 149Q338 150 389 264T442 381Q442 382 418 382H394V444H401Z"></path></g><g data-mml-node="mn" transform="translate(640,-150) scale(0.707)"><path data-c="1D7D0" d="M175 580Q175 578 185 572T205 551T215 510Q215 467 191 449T137 430Q107 430 83 448T58 511Q58 558 91 592T168 640T259 654Q328 654 383 637Q451 610 484 563T517 459Q517 401 482 360T368 262Q340 243 265 184L210 140H274Q416 140 429 145Q439 148 447 186T455 237H517V233Q516 230 501 119Q489 9 486 4V0H57V25Q57 51 58 54Q60 57 109 106T215 214T288 291Q364 377 364 458Q364 515 328 553T231 592Q214 592 201 589T181 584T175 580Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3027.2,0) translate(0 -0.5)"><path data-c="7C" d="M139 -249H137Q125 -249 119 -235V251L120 737Q130 750 139 750Q152 750 159 735V-235Q151 -249 141 -249H139Z"></path></g></g><rect width="3505.2" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container></p><ul><li>当两个向量完全相反（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="5.919ex" height="1.538ex" role="img" focusable="false" viewBox="0 -669 2616 680"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(1338,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1616,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(2172,0)"></path></g></g></g></svg></mjx-container>为-1），<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex;" xmlns="http://www.w3.org/2000/svg" width="15.869ex" height="2.032ex" role="img" focusable="false" viewBox="0 -694 7014 898"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(1338,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1616,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(2172,0)"></path><path data-c="20" d="" transform="translate(2616,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(2866,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(3260,0)"></path><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(3538,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(4371,0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(4649,0)"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(4927,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(5427,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(5819,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(6097,0)"></path><path data-c="79" d="M69 -66Q91 -66 104 -80T118 -116Q118 -134 109 -145T91 -160Q84 -163 97 -166Q104 -168 111 -168Q131 -168 148 -159T175 -138T197 -106T213 -75T225 -43L242 0L170 183Q150 233 125 297Q101 358 96 368T80 381Q79 382 78 382Q66 385 34 385H19V431H26L46 430Q65 430 88 429T122 428Q129 428 142 428T171 429T200 430T224 430L233 431H241V385H232Q183 385 185 366L286 112Q286 113 332 227L376 341V350Q376 365 366 373T348 383T334 385H331V431H337H344Q351 431 361 431T382 430T405 429T422 429Q477 429 503 431H508V385H497Q441 380 422 345Q420 343 378 235T289 9T227 -131Q180 -204 113 -204Q69 -204 44 -177T19 -116Q19 -89 35 -78T69 -66Z" transform="translate(6486,0)"></path></g></g></g></svg></mjx-container>为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></svg></mjx-container></li><li>当两个向量不相关（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="5.919ex" height="1.538ex" role="img" focusable="false" viewBox="0 -669 2616 680"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(1338,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1616,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(2172,0)"></path></g></g></g></svg></mjx-container>为0），<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex;" xmlns="http://www.w3.org/2000/svg" width="15.869ex" height="2.032ex" role="img" focusable="false" viewBox="0 -694 7014 898"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(1338,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1616,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(2172,0)"></path><path data-c="20" d="" transform="translate(2616,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(2866,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(3260,0)"></path><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(3538,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(4371,0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(4649,0)"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(4927,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(5427,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(5819,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(6097,0)"></path><path data-c="79" d="M69 -66Q91 -66 104 -80T118 -116Q118 -134 109 -145T91 -160Q84 -163 97 -166Q104 -168 111 -168Q131 -168 148 -159T175 -138T197 -106T213 -75T225 -43L242 0L170 183Q150 233 125 297Q101 358 96 368T80 381Q79 382 78 382Q66 385 34 385H19V431H26L46 430Q65 430 88 429T122 428Q129 428 142 428T171 429T200 430T224 430L233 431H241V385H232Q183 385 185 366L286 112Q286 113 332 227L376 341V350Q376 365 366 373T348 383T334 385H331V431H337H344Q351 431 361 431T382 430T405 429T422 429Q477 429 503 431H508V385H497Q441 380 422 345Q420 343 378 235T289 9T227 -131Q180 -204 113 -204Q69 -204 44 -177T19 -116Q19 -89 35 -78T69 -66Z" transform="translate(6486,0)"></path></g></g></g></svg></mjx-container>为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.507ex" role="img" focusable="false" viewBox="0 -666 500 666"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></svg></mjx-container>  </li><li>当两个向量完全相同（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="5.919ex" height="1.538ex" role="img" focusable="false" viewBox="0 -669 2616 680"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(1338,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1616,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(2172,0)"></path></g></g></g></svg></mjx-container>为1），<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.462ex;" xmlns="http://www.w3.org/2000/svg" width="15.869ex" height="2.032ex" role="img" focusable="false" viewBox="0 -694 7014 898"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mtext"><path data-c="63" d="M370 305T349 305T313 320T297 358Q297 381 312 396Q317 401 317 402T307 404Q281 408 258 408Q209 408 178 376Q131 329 131 219Q131 137 162 90Q203 29 272 29Q313 29 338 55T374 117Q376 125 379 127T395 129H409Q415 123 415 120Q415 116 411 104T395 71T366 33T318 2T249 -11Q163 -11 99 53T34 214Q34 318 99 383T250 448T370 421T404 357Q404 334 387 320Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(444,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(944,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(1338,0)"></path><path data-c="6E" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q450 438 463 329Q464 322 464 190V104Q464 66 466 59T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(1616,0)"></path><path data-c="65" d="M28 218Q28 273 48 318T98 391T163 433T229 448Q282 448 320 430T378 380T406 316T415 245Q415 238 408 231H126V216Q126 68 226 36Q246 30 270 30Q312 30 342 62Q359 79 369 104L379 128Q382 131 395 131H398Q415 131 415 121Q415 117 412 108Q393 53 349 21T250 -11Q155 -11 92 58T28 218ZM333 275Q322 403 238 411H236Q228 411 220 410T195 402T166 381T143 340T127 274V267H333V275Z" transform="translate(2172,0)"></path><path data-c="20" d="" transform="translate(2616,0)"></path><path data-c="73" d="M295 316Q295 356 268 385T190 414Q154 414 128 401Q98 382 98 349Q97 344 98 336T114 312T157 287Q175 282 201 278T245 269T277 256Q294 248 310 236T342 195T359 133Q359 71 321 31T198 -10H190Q138 -10 94 26L86 19L77 10Q71 4 65 -1L54 -11H46H42Q39 -11 33 -5V74V132Q33 153 35 157T45 162H54Q66 162 70 158T75 146T82 119T101 77Q136 26 198 26Q295 26 295 104Q295 133 277 151Q257 175 194 187T111 210Q75 227 54 256T33 318Q33 357 50 384T93 424T143 442T187 447H198Q238 447 268 432L283 424L292 431Q302 440 314 448H322H326Q329 448 335 442V310L329 304H301Q295 310 295 316Z" transform="translate(2866,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(3260,0)"></path><path data-c="6D" d="M41 46H55Q94 46 102 60V68Q102 77 102 91T102 122T103 161T103 203Q103 234 103 269T102 328V351Q99 370 88 376T43 385H25V408Q25 431 27 431L37 432Q47 433 65 434T102 436Q119 437 138 438T167 441T178 442H181V402Q181 364 182 364T187 369T199 384T218 402T247 421T285 437Q305 442 336 442Q351 442 364 440T387 434T406 426T421 417T432 406T441 395T448 384T452 374T455 366L457 361L460 365Q463 369 466 373T475 384T488 397T503 410T523 422T546 432T572 439T603 442Q729 442 740 329Q741 322 741 190V104Q741 66 743 59T754 49Q775 46 803 46H819V0H811L788 1Q764 2 737 2T699 3Q596 3 587 0H579V46H595Q656 46 656 62Q657 64 657 200Q656 335 655 343Q649 371 635 385T611 402T585 404Q540 404 506 370Q479 343 472 315T464 232V168V108Q464 78 465 68T468 55T477 49Q498 46 526 46H542V0H534L510 1Q487 2 460 2T422 3Q319 3 310 0H302V46H318Q379 46 379 62Q380 64 380 200Q379 335 378 343Q372 371 358 385T334 402T308 404Q263 404 229 370Q202 343 195 315T187 232V168V108Q187 78 188 68T191 55T200 49Q221 46 249 46H265V0H257L234 1Q210 2 183 2T145 3Q42 3 33 0H25V46H41Z" transform="translate(3538,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(4371,0)"></path><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z" transform="translate(4649,0)"></path><path data-c="61" d="M137 305T115 305T78 320T63 359Q63 394 97 421T218 448Q291 448 336 416T396 340Q401 326 401 309T402 194V124Q402 76 407 58T428 40Q443 40 448 56T453 109V145H493V106Q492 66 490 59Q481 29 455 12T400 -6T353 12T329 54V58L327 55Q325 52 322 49T314 40T302 29T287 17T269 6T247 -2T221 -8T190 -11Q130 -11 82 20T34 107Q34 128 41 147T68 188T116 225T194 253T304 268H318V290Q318 324 312 340Q290 411 215 411Q197 411 181 410T156 406T148 403Q170 388 170 359Q170 334 154 320ZM126 106Q126 75 150 51T209 26Q247 26 276 49T315 109Q317 116 318 175Q318 233 317 233Q309 233 296 232T251 223T193 203T147 166T126 106Z" transform="translate(4927,0)"></path><path data-c="72" d="M36 46H50Q89 46 97 60V68Q97 77 97 91T98 122T98 161T98 203Q98 234 98 269T98 328L97 351Q94 370 83 376T38 385H20V408Q20 431 22 431L32 432Q42 433 60 434T96 436Q112 437 131 438T160 441T171 442H174V373Q213 441 271 441H277Q322 441 343 419T364 373Q364 352 351 337T313 322Q288 322 276 338T263 372Q263 381 265 388T270 400T273 405Q271 407 250 401Q234 393 226 386Q179 341 179 207V154Q179 141 179 127T179 101T180 81T180 66V61Q181 59 183 57T188 54T193 51T200 49T207 48T216 47T225 47T235 46T245 46H276V0H267Q249 3 140 3Q37 3 28 0H20V46H36Z" transform="translate(5427,0)"></path><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z" transform="translate(5819,0)"></path><path data-c="74" d="M27 422Q80 426 109 478T141 600V615H181V431H316V385H181V241Q182 116 182 100T189 68Q203 29 238 29Q282 29 292 100Q293 108 293 146V181H333V146V134Q333 57 291 17Q264 -10 221 -10Q187 -10 162 2T124 33T105 68T98 100Q97 107 97 248V385H18V422H27Z" transform="translate(6097,0)"></path><path data-c="79" d="M69 -66Q91 -66 104 -80T118 -116Q118 -134 109 -145T91 -160Q84 -163 97 -166Q104 -168 111 -168Q131 -168 148 -159T175 -138T197 -106T213 -75T225 -43L242 0L170 183Q150 233 125 297Q101 358 96 368T80 381Q79 382 78 382Q66 385 34 385H19V431H26L46 430Q65 430 88 429T122 428Q129 428 142 428T171 429T200 430T224 430L233 431H241V385H232Q183 385 185 366L286 112Q286 113 332 227L376 341V350Q376 365 366 373T348 383T334 385H331V431H337H344Q351 431 361 431T382 430T405 429T422 429Q477 429 503 431H508V385H497Q441 380 422 345Q420 343 378 235T289 9T227 -131Q180 -204 113 -204Q69 -204 44 -177T19 -116Q19 -89 35 -78T69 -66Z" transform="translate(6486,0)"></path></g></g></g></svg></mjx-container>为 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="1.131ex" height="1.557ex" role="img" focusable="false" viewBox="0 -666 500 688"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g></g></svg></mjx-container></li></ul><p>所以，该函数会输出一个 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="4.526ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2000.7 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mn" transform="translate(278,0)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mn" transform="translate(1222.7,0)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mo" transform="translate(1722.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container> 的数值。</p><p>定义一个embedding对象</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="attr">embedding</span> = NLEmbedding.sentenceEmbedding(for: .english)!</span><br></pre></td></tr></table></figure><p>返回两个文本的相似度</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">func getSimilarity<span class="function"><span class="params">(a: <span class="built_in">String</span>, b: <span class="built_in">String</span>)</span> -&gt;</span> Double{</span><br><span class="line">    <span class="keyword">let</span> distance = embedding.distance(between: a, and: b)</span><br><span class="line">    <span class="keyword">return</span> distance</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h3 id="收集数据"><a href="#收集数据" class="headerlink" title="收集数据"></a>收集数据</h3><h4 id="JSON题库"><a href="#JSON题库" class="headerlink" title="JSON题库"></a>JSON题库</h4><p>作为测试，我暂且只录入三道题目。之后我会从这三个题目中选择其中一个，并测试能否检索出正确的题目。  </p><p>使用JSON格式可以很方便的管理收录的文本：</p><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line"><span class="comment">"IG Chemistry 1C"</span>:{</span><br><span class="line"><span class="comment">"paper"</span>: <span class="comment">"IG Chemistry 1C"</span>,</span><br><span class="line"><span class="comment">"1"</span>: <span class="comment">"This question is about mixtures and compounds.(a) The box gives some methods used to separate mixtures.chromatography crystallisation fractional distillation simple distillationChoose methods from the box to answer the following questions.Each method may be used once, more than once or not at all.(i) Identify a method to separate a single food dye from a mixture of food dyes.(b) The diagram represents a molecule.Explain why this molecule is a compound.(2)(c) The molecular formula of another compound is C3H5N3O9 (i) State the number of different elements in C3H5N3O9(1)(ii) Determine the number of atoms in a molecule of C3H5N3O9(Total for Question 1 = 7 marks)"</span>,</span><br><span class="line"><span class="comment">"2"</span>: <span class="comment">"2 This question is about rusting.(a) A simplified formula for rust is Fe2O3(i) Name the two substances needed for iron to rust.(2)12(ii) Give the chemical name for rust.(iii) What type of reaction occurs in the rusting of iron?A combustionB neutralisationC oxidationD thermal decomposition(b) Some iron objects are coated with a layer of zinc to prevent rusting. (i) Name this type of rust prevention.(1)(1)(ii) Explain how this type of rust prevention continues to protect iron when the layer of zinc is damaged.(2)(iii) Give two other methods used to prevent iron from rusting.(2)12(Total for Question 2 = 9 marks)"</span>,</span><br><span class="line"><span class="comment">"3"</span>: <span class="comment">"3This question is about states of matter.(a) The box gives words relating to changes of state.Complete the table by giving the correct word from the box for each change of state.condensation cooling evaporation freezing melting sublimation(3)Change of stateName of changesolid to liquidsolid to gasliquid to solid(b) When ammonia gas and hydrogen chloride gas mix, they react together to form a white solid called ammonium chloride.The equation for the reaction isNH3(g) + HCl(g) → NH4Cl(s)A teacher soaks a piece of cotton wool in concentrated ammonia solution and another piece of cotton wool in concentrated hydrochloric acid.The teacher places the two pieces of cotton wool at opposite ends of a glass tube at the same time.After several minutes, a white ring of solid ammonium chloride forms.cotton wool soaked in concentrated ammonia solutionwhite ring of ammonium chloridecotton wool soaked in concentrated hydrochloric acid (i) State the name given to the spreading out of gas particles.(1) (ii) State how the diagram shows that the particles of ammonia gas are travellingat higher speeds than the particles of hydrogen chloride gas.(1)(iii) Gas particles travel at high speeds.Give a reason why the white ring of ammonium chloride takes several minutes to form.(1)(iv) Concentrated ammonia solution and concentrated hydrochloric acid are corrosive.Give one safety precaution the teacher should take.(1)(Total for Question 3 = 7 marks)"</span>,</span><br><span class="line">},</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>我们定义一个结构体用来存放从JSON文件中读取的数据  </p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="type">ExamQuestion</span>: Codable {</span><br><span class="line">    <span class="keyword">let</span> paper: <span class="keyword">String</span></span><br><span class="line">    <span class="keyword">let</span> questions: [<span class="keyword">String</span>: <span class="keyword">String</span>]</span><br><span class="line">    <span class="keyword">let</span> ms: [<span class="keyword">String</span>: <span class="keyword">String</span>]</span><br><span class="line">    <span class="keyword">let</span> n: [<span class="keyword">String</span>: <span class="keyword">String</span>]</span><br><span class="line">}</span><br></pre></td></tr></table></figure><p>Codable 允许我们轻松地将数据类型（如结构体或类）编码为或解码自外部表示形式（如JSON）   </p><p><strong>let paper: String</strong> 试卷名称<br><strong>let questions: [String: String]</strong> 题目内容<br><strong>let ms: [String: String]</strong> 答案编号<br><strong>let n: [String: String]</strong> 答案图片数量（应对可能出现的多张答案图片的情况）  </p><p>然后就可以读取JSON文件了</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">func parseExamQuestions<span class="function"><span class="params">()</span> -&gt;</span> [ExamQuestion]? {</span><br><span class="line">    guard <span class="keyword">let</span> url = Bundle.main.url(forResource: <span class="string">"paperkey"</span>, withExtension: <span class="string">"json"</span>) <span class="keyword">else</span> {</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"File not found"</span>)</span><br><span class="line">        <span class="keyword">return</span> nil</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">do</span> {</span><br><span class="line">        <span class="keyword">let</span> data = <span class="keyword">try</span> Data(contentsOf: url)</span><br><span class="line">        <span class="keyword">let</span> json = <span class="keyword">try</span> JSONDecoder().decode([String: [String: [String: <span class="built_in">String</span>]]].self, from: data)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">var</span> examQuestions: [ExamQuestion] = []</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (paperName, questionsDict) <span class="keyword">in</span> json {</span><br><span class="line">            <span class="keyword">var</span> questions: [String: <span class="built_in">String</span>] = [:]</span><br><span class="line">            <span class="keyword">var</span> markSchemes: [String: <span class="built_in">String</span>] = [:]</span><br><span class="line">            <span class="keyword">var</span> numImage: [String: <span class="built_in">String</span>] = [:]</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">for</span> (questionNumber, questionData) <span class="keyword">in</span> questionsDict {</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> content = questionData[<span class="string">"content"</span>] {</span><br><span class="line">                    questions[questionNumber] = content</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> ms = questionData[<span class="string">"ms"</span>] {</span><br><span class="line">                    markSchemes[questionNumber] = ms</span><br><span class="line">                }</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">let</span> n = questionData[<span class="string">"n"</span>] {</span><br><span class="line">                    numImage[questionNumber] = n</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">let</span> examQuestion = ExamQuestion(paper: paperName, questions: questions, ms: markSchemes, n: numImage)</span><br><span class="line">            examQuestions.append(examQuestion)</span><br><span class="line">        }</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> examQuestions</span><br><span class="line">    } <span class="keyword">catch</span> {</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"Error decoding JSON: \(error)"</span>)</span><br><span class="line">        <span class="keyword">return</span> nil</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h4 id="答案图片"><a href="#答案图片" class="headerlink" title="答案图片"></a>答案图片</h4><p>为了在App内加载相应题目的答案，我将答案转制成了PNG的图片，并按照一定命名规则存储在项目目录里的 Assets.xcassets 里。</p><p><img src="https://fastly.jsdelivr.net/gh/zs-andy/blog-img@main/Screenshot%202024-09-06%20at%2013.05.13.png"></p><h3 id="检索并取最大相似度"><a href="#检索并取最大相似度" class="headerlink" title="检索并取最大相似度"></a>检索并取最大相似度</h3><p>在 ContentView 结构体中添加五个@State关键字的变量，这样UI视图就会随着变量的改变而改变。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@State</span> private var <span class="attribute">paperName</span>: String = <span class="string">""</span></span><br><span class="line"><span class="variable">@State</span> private var <span class="attribute">questionNumber</span>: Int = <span class="number">0</span></span><br><span class="line"><span class="variable">@State</span> private var <span class="attribute">questionText</span>: String = <span class="string">""</span></span><br><span class="line"><span class="variable">@State</span> private var <span class="attribute">questionMs</span>: String?</span><br><span class="line"><span class="variable">@State</span> private var <span class="attribute">numImage</span>: String = <span class="string">"1"</span></span><br></pre></td></tr></table></figure><p>然后编写搜索函数</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> <span class="title function_">searching</span>(<span class="params">text</span>: <span class="type">String</span>) {</span><br><span class="line">       <span class="keyword">if</span> <span class="keyword">let</span> examQuestions <span class="operator">=</span> parseExamQuestions() {</span><br><span class="line">           <span class="keyword">var</span> closestSim: <span class="type">Double</span> <span class="operator">=</span> <span class="number">2.0</span></span><br><span class="line">           <span class="keyword">var</span> closestPaper <span class="operator">=</span> <span class="string">""</span></span><br><span class="line">           <span class="keyword">var</span> closestNum <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">           <span class="keyword">var</span> closestQText <span class="operator">=</span> <span class="string">""</span></span><br><span class="line">           <span class="keyword">var</span> closestMS <span class="operator">=</span> <span class="string">""</span></span><br><span class="line">           <span class="keyword">var</span> num <span class="operator">=</span> <span class="string">"1"</span></span><br><span class="line">           <span class="keyword">for</span> examQuestion <span class="keyword">in</span> examQuestions {</span><br><span class="line">               <span class="keyword">let</span> paperName <span class="operator">=</span> examQuestion.paper</span><br><span class="line">               <span class="keyword">let</span> questions <span class="operator">=</span> examQuestion.questions</span><br><span class="line">               <span class="keyword">let</span> markScheme <span class="operator">=</span> examQuestion.ms</span><br><span class="line">               <span class="keyword">let</span> numImage <span class="operator">=</span> examQuestion.n</span><br><span class="line">               </span><br><span class="line">               <span class="keyword">for</span> (questionNumber, questionText) <span class="keyword">in</span> questions {</span><br><span class="line">                   <span class="keyword">let</span> distance <span class="operator">=</span> embedding.distance(between: text, and: questionText)</span><br><span class="line">                   </span><br><span class="line">                   <span class="keyword">if</span> distance <span class="operator">&lt;</span> closestSim {</span><br><span class="line">                       closestSim <span class="operator">=</span> distance</span><br><span class="line">                       closestPaper <span class="operator">=</span> paperName</span><br><span class="line">                       closestNum <span class="operator">=</span> <span class="type">Int</span>(questionNumber) <span class="operator">??</span> <span class="number">0</span></span><br><span class="line">                       closestQText <span class="operator">=</span> questionText</span><br><span class="line">                       closestMS <span class="operator">=</span> markScheme[questionNumber] <span class="operator">??</span> <span class="string">"No mark scheme available"</span></span><br><span class="line">                       num <span class="operator">=</span> numImage[questionNumber] <span class="operator">??</span> <span class="string">"1"</span></span><br><span class="line">                   }</span><br><span class="line">               }</span><br><span class="line">           }</span><br><span class="line">           </span><br><span class="line">           <span class="built_in">print</span>(closestPaper)</span><br><span class="line">           <span class="built_in">print</span>(closestNum)</span><br><span class="line">           <span class="built_in">print</span>(closestQText)</span><br><span class="line">           <span class="built_in">print</span>(closestMS)</span><br><span class="line">           </span><br><span class="line">           <span class="keyword">self</span>.paperName <span class="operator">=</span> closestPaper</span><br><span class="line">           <span class="keyword">self</span>.questionNumber <span class="operator">=</span> closestNum</span><br><span class="line">           <span class="keyword">self</span>.questionText <span class="operator">=</span> closestQText</span><br><span class="line">           <span class="keyword">self</span>.questionMs <span class="operator">=</span> closestMS</span><br><span class="line">           <span class="keyword">self</span>.numImage <span class="operator">=</span> num</span><br><span class="line">       } <span class="keyword">else</span> {</span><br><span class="line">           <span class="keyword">self</span>.paperName <span class="operator">=</span> <span class="string">""</span></span><br><span class="line">           <span class="keyword">self</span>.questionNumber <span class="operator">=</span> <span class="number">0</span></span><br><span class="line">           <span class="keyword">self</span>.questionText <span class="operator">=</span> <span class="string">"No match found"</span></span><br><span class="line">           <span class="keyword">self</span>.questionMs <span class="operator">=</span> <span class="string">"No mark scheme available"</span></span><br><span class="line">           <span class="keyword">self</span>.numImage <span class="operator">=</span> <span class="string">"1"</span></span><br><span class="line">       }</span><br><span class="line">   }</span><br></pre></td></tr></table></figure><p>所有的题目都存储在 ExamQuestion 类型的数组当中。所以，只需要遍历一遍数组和数组内部的字典，就可以得到和扫描出的文本最相近的题目。</p><h3 id="显示结果"><a href="#显示结果" class="headerlink" title="显示结果"></a>显示结果</h3><p>这里搭建了一个简单的UI来展示拍摄的题目、对应的题目答案以及一些题目信息。</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> body: <span class="built_in">some</span> View {</span><br><span class="line">  VStack {</span><br><span class="line">     <span class="keyword">if</span> <span class="built_in">let</span> <span class="built_in">image</span> = <span class="built_in">image</span> {</span><br><span class="line">         Image(uiImage: <span class="built_in">image</span>)</span><br><span class="line">             .resizable()</span><br><span class="line">             .scaledToFit()</span><br><span class="line">             .frame(<span class="built_in">width</span>: <span class="number">300</span>, <span class="built_in">height</span>: <span class="number">300</span>)</span><br><span class="line">     } <span class="keyword">else</span> {</span><br><span class="line">         Image(systemName: <span class="string">"photo"</span>)</span><br><span class="line">             .resizable()</span><br><span class="line">             .scaledToFit()</span><br><span class="line">             .frame(<span class="built_in">width</span>: <span class="number">300</span>, <span class="built_in">height</span>: <span class="number">300</span>)</span><br><span class="line">             .foregroundColor(.gray)</span><br><span class="line">     }</span><br><span class="line">     <span class="keyword">if</span> <span class="built_in">let</span> questionMs = questionMs {</span><br><span class="line">         VStack {</span><br><span class="line">             ForEach(<span class="number">0</span>...((Int(numImage) ?? <span class="number">1</span>) - <span class="number">1</span>), id: \.self) { index <span class="keyword">in</span></span><br><span class="line">                 <span class="built_in">let</span> imageName = <span class="string">"\(questionMs)_\(index)"</span></span><br><span class="line">                 Image(imageName)</span><br><span class="line">                     .resizable()</span><br><span class="line">                     .scaledToFit()</span><br><span class="line">                     .frame(<span class="built_in">width</span>: <span class="number">300</span>, <span class="built_in">height</span>: <span class="number">300</span>)</span><br><span class="line">             }</span><br><span class="line">         }</span><br><span class="line">     } <span class="keyword">else</span> {</span><br><span class="line">         Image(systemName: <span class="string">"photo"</span>)</span><br><span class="line">             .resizable()</span><br><span class="line">             .scaledToFit()</span><br><span class="line">             .frame(<span class="built_in">width</span>: <span class="number">300</span>, <span class="built_in">height</span>: <span class="number">300</span>)</span><br><span class="line">             .foregroundColor(.gray)</span><br><span class="line">     }</span><br><span class="line">     Text(<span class="string">"Name: \(paperName)"</span>)</span><br><span class="line">     Text(<span class="string">"Number: \(questionNumber)"</span>)</span><br><span class="line">     Text(<span class="string">"Content: \(questionText)"</span>)</span><br><span class="line">     Text(<span class="string">"Markscheme: \(String(describing: questionMs))"</span>)</span><br><span class="line">     Button(<span class="string">"Take Photo"</span>) {</span><br><span class="line">         isShowingImagePicker = <span class="literal">true</span></span><br><span class="line">     }</span><br><span class="line">     .padding()</span><br><span class="line">  }</span><br><span class="line">  .fullScreenCover(isPresented: $isShowingImagePicker, onDismiss: recognizeText) {</span><br><span class="line">     ImagePicker(<span class="built_in">image</span>: $<span class="built_in">image</span>)</span><br><span class="line">         .edgesIgnoringSafeArea(.all)</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure><h2 id="成果展示"><a href="#成果展示" class="headerlink" title="成果展示"></a>成果展示</h2>]]></content>
      
      
      <categories>
          
          <category> Projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Projects </tag>
            
            <tag> Coding </tag>
            
            <tag> Algorithm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DeadLineTodo Development Log</title>
      <link href="/2024/01/18/DeadLineTodo_Development_Log/"/>
      <url>/2024/01/18/DeadLineTodo_Development_Log/</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p><strong>DeadLineTodo</strong> is an app focused on tracking and recording <strong>task durations</strong> and <strong>deadlines</strong>.  It has been launched on the App Store and recommended by the mergeek.com community.</p><h2 id="Feature-Overview"><a href="#Feature-Overview" class="headerlink" title="Feature Overview"></a>Feature Overview</h2><p>The app allows users to add to-dos with deadlines and estimated completion times, visually displaying the relationship between task size and the deadline using progress blocks. Additionally, the app quantifies all tasks, making user actions more visualized.</p><h2 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h2><ul><li>Basic UI Setup ✔️ 2024&#x2F;1&#x2F;20</li><li>Basic Functionality Implementation ✔️ 2024&#x2F;2&#x2F;10</li><li>Reminder Syncing ✔️ 2024&#x2F;2&#x2F;13</li><li>Global Search ✔️ 2024&#x2F;2&#x2F;14</li><li>UI Style Enhancement ✔️ 2024&#x2F;2&#x2F;17</li><li>Efficiency Score Algorithm Optimization ✔️ 2024&#x2F;2&#x2F;17</li><li>User Settings Persistence ✔️ 2024&#x2F;2&#x2F;18</li><li>Urgent Reminders ✔️ 2024&#x2F;2&#x2F;20</li><li>Task Timer ✔️ 2024&#x2F;2&#x2F;24</li><li>Support for Traditional Chinese and English ✔️ 2024&#x2F;2&#x2F;25</li><li>Recurring Tasks ✔️ 2024&#x2F;3&#x2F;02</li><li>Set Start Date ✔️ 2024&#x2F;3&#x2F;04</li><li>Daily Task Widgets ✔️ 2024&#x2F;3&#x2F;25</li><li>Dark Mode ✔️ 2024&#x2F;4&#x2F;17</li><li>Full Calendar Syncing ✔️ 2024&#x2F;5&#x2F;10</li><li>Full Reminder Syncing ✔️ 2024&#x2F;5&#x2F;15</li><li>Redesign App Icon ✔️ 2024&#x2F;5&#x2F;23</li><li>Custom Task Completion Time ✔️ 2024&#x2F;7&#x2F;10</li><li>More Widget Sizes ✔️ 2024&#x2F;7&#x2F;20</li><li>Difference Between Estimated and Actual Time Statistics ✔️ 2024&#x2F;11&#x2F;21</li><li>Compatible with IOS18 </li><li>Custom Completion Duration</li><li>User Guide</li><li>Redesign Completed Tasks UI</li></ul><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><strong>DeadLineTodo</strong>是一款专注于跟踪和记录<strong>任务时长</strong>和<strong>截止时间</strong>的App。现已上架App Store，并获得了mergeek.com社区的推荐。</p><h2 id="功能概述"><a href="#功能概述" class="headerlink" title="功能概述"></a>功能概述</h2><p>App能够通过用户添加附有截止日期和计划所需时间的待办事项，使用进度块直观地展示任务体量和Deadline之间的关系。并且App可以将所有任务进行量化统计，让用户的行动更加可视化。</p><h2 id="TODO-1"><a href="#TODO-1" class="headerlink" title="TODO"></a>TODO</h2><ul><li>基础UI搭建 ✔️ 2024&#x2F;1&#x2F;20</li><li>基础功能搭建 ✔️ 2024&#x2F;2&#x2F;10</li><li>提醒事项同步 ✔️ 2024&#x2F;2&#x2F;13</li><li>全局搜索 ✔️ 2024&#x2F;2&#x2F;14</li><li>UI风格美化 ✔️ 2024&#x2F;2&#x2F;17</li><li>优化效率分数算法 ✔️ 2024&#x2F;2&#x2F;17</li><li>用户设置持久化 ✔️ 2024&#x2F;2&#x2F;18</li><li>紧急提醒 ✔️ 2024&#x2F;2&#x2F;20</li><li>任务计时 ✔️ 2024&#x2F;2&#x2F;24</li><li>支持繁体中文和英文 ✔️ 2024&#x2F;2&#x2F;25</li><li>重复任务 ✔️ 2024&#x2F;3&#x2F;02</li><li>设置开始日期 ✔️ 2024&#x2F;3&#x2F;04</li><li>每日任务小组件 ✔️ 2024&#x2F;3&#x2F;25</li><li>暗黑模式 ✔️ 2024&#x2F;4&#x2F;17</li><li>日历双向同步 ✔️ 2024&#x2F;5&#x2F;10</li><li>提醒事项双向同步 ✔️ 2024&#x2F;5&#x2F;15</li><li>重制App图标 ✔️ 2024&#x2F;5&#x2F;23</li><li>自定义任务完成时间 ✔️ 2024&#x2F;7&#x2F;10</li><li>更多尺寸的小组件 ✔️ 2024&#x2F;7&#x2F;20</li><li>预计时间和实际时间差值统计 ✔️ 2024&#x2F;11&#x2F;21</li><li>适配IOS18 </li><li>自定义完成时长</li><li>使用引导</li><li>重新设计已完成任务UI</li></ul>]]></content>
      
      
      <categories>
          
          <category> Projects </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Projects </tag>
            
            <tag> Log </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Welcome!</title>
      <link href="/2023/12/27/Welcome/"/>
      <url>/2023/12/27/Welcome/</url>
      
        <content type="html"><![CDATA[<h2 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome!"></a>Welcome!</h2><p>Welcome to my blog! I am a Chinese high school student who loves coding 💻 and photography 📷. I enjoy software development and algorithm design, and I’m currently studying A Levels, competitive programming and computer vision.  </p><p>Here, you can find a variety of content, including but not limited to:</p><ul><li>Study Notes</li><li>Logs</li><li>Tutorials and Guides</li></ul><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>You can switch between dark and light themes using the moon&#x2F;sun icon in the bottom right corner. Click on the search icon to perform a global search within the blog for any characters. The site also supports sharing on Twitter and Facebook. While reading blog posts, you’ll find an article outline on the right side, allowing you to jump directly to the section you’re interested in by clicking on the title.  </p><p>For the best experience, I recommend visiting the site on a tablet or computer.</p><h2 id="My-Photography-Site"><a href="#My-Photography-Site" class="headerlink" title="My Photography Site"></a>My Photography Site</h2><p>I also invite you to visit my other website: <a href="https://zs-andy.github.io/">https://zs-andy.github.io</a>.<br>Here, you’ll find my photography works and related writings.</p><h2 id="欢迎！"><a href="#欢迎！" class="headerlink" title="欢迎！"></a>欢迎！</h2><p>欢迎来到我的博客！我是一个爱好编程💻兼摄影📷的中国高中生，喜欢软件开发和算法设计，目前正在学习A Level、信息学竞赛和计算机视觉。  </p><p>你可以在这里看到以下内容，包括但不限于：  </p><ul><li>学习笔记  </li><li>日志</li><li>教程攻略</li></ul><h2 id="食用姿势"><a href="#食用姿势" class="headerlink" title="食用姿势"></a>食用姿势</h2><p>右下角月亮&#x2F;小太阳图标可以切换黑白主题，点击搜索图标可以对博客进行任意字符的全局搜索，网站也支持Twitter和Facebook的分享。在浏览博文时右侧可以看到文章大纲，点击标题可以即刻跳转至你想浏览的位置。</p><p>推荐使用平板或者电脑访问。</p><h2 id="我的摄影站点"><a href="#我的摄影站点" class="headerlink" title="我的摄影站点"></a>我的摄影站点</h2><p>也欢迎访问我的另外一个网站：<a href="https://zs-andy.github.io/">https://zs-andy.github.io</a><br>我的摄影作品和相关的文字记录将会展示在这个站点里。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Welcome </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从零开始零成本搭建个人网站</title>
      <link href="/2023/03/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E9%9B%B6%E6%88%90%E6%9C%AC%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
      <url>/2023/03/19/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E9%9B%B6%E6%88%90%E6%9C%AC%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>我是一名摄影爱好者，一直很想通过个人网站的形式展示、分享我的摄影作品。但在一般情况下，搭建网站首先需要购买域名、备案、购买云服务器，然后再进行网站的部署。这些步骤所花费的金钱和时间，对于在读的学生来说可能不太愿意接受。所以我选择通过Github Pages+Hexo来搭建个人网站。这样就可以省去购买域名和云服务器等步骤，通过GitHub的托管服务来部署我们的个人网站，并使用Hexo中大量的模板来轻松完成网站的搭建。这篇文章既是一篇教程，也是我第一次搭建网站过程的记录。</p><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h2><p>前往<a href="https://nodejs.org/zh-cn">node.js官网</a>下载长期维护版。<br>安装过程全程点下一步即可。安装完成后在终端输入</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">node</span> <span class="title">-v</span></span><br></pre></td></tr></table></figure><p>显示版本号说明安装成功</p><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>前往<a href="https://git-scm.com/">git官网</a>下载安装包。<br>安装过程全程点下一步即可。安装完成后鼠标右键出现Git选项即为安装成功。<br><a href="https://imgse.com/i/ppYOxQx"><img src="https://s1.ax1x.com/2023/03/19/ppYOxQx.png" alt="ppYOxQx.png"></a></p><h1 id="建立Github仓库"><a href="#建立Github仓库" class="headerlink" title="建立Github仓库"></a>建立Github仓库</h1><p>我们的网站想要开放给所有人浏览，就必须将网站代码部署到服务器上。万能的Github就可以提供这样的免费托管服务。  </p><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p>点击右上角的 <strong>+</strong> 号，选择 <strong>New repository</strong><br><a href="https://imgse.com/i/ppYXCwD"><img src="https://s1.ax1x.com/2023/03/19/ppYXCwD.png" alt="ppYXCwD.png"></a><br>在仓库名里填写：你的GitHub用户名.github.io，并选择Public。<br>比如我的用户名为zs-andy，那么我应该填写的是：zs-andy.github.io<br><a href="https://imgse.com/i/ppY0LP1"><img src="https://s1.ax1x.com/2023/03/19/ppY0LP1.png" alt="ppY0LP1.png"></a><br>点击 <strong>Create repository</strong>，一个仓库就新建好了。<br>进入我们新建的仓库点击 <strong>Settings</strong>，选择 <strong>Pages</strong> 在 <strong>Branch</strong> 下将 <strong>main</strong> 分支更改为 <strong>master</strong> 分支。</p><h1 id="建立本地环境"><a href="#建立本地环境" class="headerlink" title="建立本地环境"></a>建立本地环境</h1><p>我们的网站代码的文件需要在本地生成然后上传。</p><h2 id="新建文件夹"><a href="#新建文件夹" class="headerlink" title="新建文件夹"></a>新建文件夹</h2><p>新建一个文件夹，这是网站文件生成的地方。进入文件夹右键，选择 <strong>Git Bash Here</strong> 。之后的命令都在这里运行。</p><h2 id="绑定GitHub邮箱"><a href="#绑定GitHub邮箱" class="headerlink" title="绑定GitHub邮箱"></a>绑定GitHub邮箱</h2><p>在刚刚打开的 <strong>Git Bash Here</strong> 里分别输入以下命令。<br><strong>注意</strong>：一行一行地执行</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config <span class="attr">--global</span> user<span class="selector-class">.name</span> <span class="string">&quot;GitHub 用户名&quot;</span></span><br><span class="line">git config <span class="attr">--global</span> user<span class="selector-class">.email</span> <span class="string">&quot;GitHub 邮箱&quot;</span></span><br></pre></td></tr></table></figure><h2 id="生成ssh密钥"><a href="#生成ssh密钥" class="headerlink" title="生成ssh密钥"></a>生成ssh密钥</h2><p>输入以下命令生成ssh密钥。</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -<span class="built_in">t</span> rsa -C <span class="string">&quot;GitHub 邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>进入.ssh文件夹：C:\Users\用户名.ssh<br><strong>注意</strong>：.ssh是隐藏文件夹<br>然后用记事本打开id_rsa.pub并复制其中的内容</p><h2 id="绑定ssh密钥"><a href="#绑定ssh密钥" class="headerlink" title="绑定ssh密钥"></a>绑定ssh密钥</h2><p>点击右上角的头像进入设置，选择 <strong>SSH and GPG keys</strong> ，然后点击 <strong>New SSH key</strong> 。<br><a href="https://imgse.com/i/pptZ8VH"><img src="https://s1.ax1x.com/2023/03/19/pptZ8VH.png" alt="pptZ8VH.png"></a><br>Title可以随意填写，重点是粘贴刚刚复制的密钥到 <strong>Key</strong> 中，最后点击 <strong>Add SSH key</strong> 完成添加。</p><h2 id="验证绑定是否成功"><a href="#验证绑定是否成功" class="headerlink" title="验证绑定是否成功"></a>验证绑定是否成功</h2><p>输入以下命令</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure><p>如果出现successful，说明绑定成功。</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>Hexo是一个快速、简洁且高效的博客框架。我们可以利用Hexo快速完成精美网站的搭建。<br>输入以下命令切换下载源。（切换为国内下载源有助于提高下载速度）</p><figure class="highlight tcl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="keyword">set</span> <span class="keyword">registry</span> <span class="keyword">http</span>://<span class="keyword">registry</span>.npmmirror.com</span><br></pre></td></tr></table></figure><p>输入以下命令安装Hexo</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-<span class="keyword">cli</span></span><br></pre></td></tr></table></figure><h2 id="初始化Hexo"><a href="#初始化Hexo" class="headerlink" title="初始化Hexo"></a>初始化Hexo</h2><p>输入以下命令完成初始化和部署插件的安装</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init </span><br><span class="line">npm <span class="keyword">install</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>安装完成之后我们可以看到在我们新建的文件夹中出现了一些新文件，点击其中的 <strong>_config.yml</strong> 并打开。<br>按照以下格式修改其文件的末尾 </p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repository:</span> git@github.com:用户名/用户名.github.io.git</span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure><h1 id="部署网站"><a href="#部署网站" class="headerlink" title="部署网站"></a>部署网站</h1><p>部署网站分为生成页面文件、本地预览和部署文件三个步骤。如果你不需要在本地先预览你的网站，那么可以跳过第二个步骤。  </p><h2 id="生成页面文件"><a href="#生成页面文件" class="headerlink" title="生成页面文件"></a>生成页面文件</h2><p>输入以下命令</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo g</span></span><br></pre></td></tr></table></figure><p>这行命令是根据你修改的配置文件来生成或更新本地的页面文件，每次修改配置后想要部署网站必须先执行这行命令。</p><h2 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure><p>复制链接并粘贴到浏览器<br><strong>注意</strong>：不要用Ctrl+C进行复制，不然会直接结束本地预览。<br>这时我们可以看到，加载出一个标题为Hexo的初始网站。</p><h2 id="部署页面"><a href="#部署页面" class="headerlink" title="部署页面"></a>部署页面</h2><p>输入以下命令</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><p>至此，我们的网站已经可以供所有人浏览了。我们再次回到刚开始建立的Github仓库中，进入 <strong>Settings</strong>，点击 <strong>Pages</strong>，复制你的网址或者直接点击 <strong>Visit site</strong> 即可访问你的网站。<br><a href="https://imgse.com/i/ppNrpC9"><img src="https://s1.ax1x.com/2023/03/20/ppNrpC9.png" alt="ppNrpC9.png"></a></p><h1 id="个性化"><a href="#个性化" class="headerlink" title="个性化"></a>个性化</h1><p>进入<a href="https://hexo.io/zh-cn/">Hexo官方网站</a>，进入主题页面，在这里可以选择自己想要的主题模板。<br>点击图片可以进入预览网站提前预览模板的样式细节，选择好心仪的主题之后点击文字标题进入该主题的Github，作者一般会在里面提供详细的安装过程。如果不想看英文文档可以选择标签带有 <em>#中文</em> 的主题，查看中文文档。</p><h1 id="更新与维护"><a href="#更新与维护" class="headerlink" title="更新与维护"></a>更新与维护</h1><p>进入<a href="https://hexo.io/zh-cn/">Hexo官方网站</a>，进入文档页面，官方提供了详细的中文文档。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Tutorials </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
